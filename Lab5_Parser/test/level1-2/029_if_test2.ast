program
    Sequence
        FunctionDefine Function name: ifElseIf, Paramtype: int()
            No Params
            CompoundStmt
                Sequence
                    Sequence
                        Sequence
                            Sequence
                                Sequence
                                    DeclStmt
                                        DefNode -  Int  
                                            Id	name: a	scope: 2	type: int
                                            No initial value
                                    AssignStmt
                                        Id	name: a	scope: 2	type: int
                                        IntegerLiteral	value: 5	type: const int
                                DeclStmt
                                    DefNode -  Int  
                                        Id	name: b	scope: 2	type: int
                                        No initial value
                            AssignStmt
                                Id	name: b	scope: 2	type: int
                                IntegerLiteral	value: 10	type: const int
                        IfElseStmt
                            BinaryExpr	 op: or	 DataType: int
                                BinaryExpr	 op: eq	 DataType: int
                                    Id	name: a	scope: 2	type: int
                                    IntegerLiteral	value: 6	type: const int
                                BinaryExpr	 op: eq	 DataType: int
                                    Id	name: b	scope: 2	type: int
                                    IntegerLiteral	value: 11	type: const int
                            CompoundStmt
                                ReturnStmt
                                    Id	name: a	scope: 2	type: int
                            CompoundStmt
                                IfElseStmt
                                    BinaryExpr	 op: and	 DataType: int
                                        BinaryExpr	 op: eq	 DataType: int
                                            Id	name: b	scope: 2	type: int
                                            IntegerLiteral	value: 10	type: const int
                                        BinaryExpr	 op: eq	 DataType: int
                                            Id	name: a	scope: 2	type: int
                                            IntegerLiteral	value: 1	type: const int
                                    AssignStmt
                                        Id	name: a	scope: 2	type: int
                                        IntegerLiteral	value: 25	type: const int
                                    IfElseStmt
                                        BinaryExpr	 op: and	 DataType: int
                                            BinaryExpr	 op: eq	 DataType: int
                                                Id	name: b	scope: 2	type: int
                                                IntegerLiteral	value: 10	type: const int
                                            BinaryExpr	 op: eq	 DataType: int
                                                Id	name: a	scope: 2	type: int
                                                ConstOneOpExpr	 op: minus	 DataType: const int
                                                    IntegerLiteral	value: 5	type: const int
                                        AssignStmt
                                            Id	name: a	scope: 2	type: int
                                            BinaryExpr	 op: add	 DataType: int
                                                Id	name: a	scope: 2	type: int
                                                IntegerLiteral	value: 15	type: const int
                                        AssignStmt
                                            Id	name: a	scope: 2	type: int
                                            OneOpExpr	 op: minus	 DataType: int
                                                Id	name: a	scope: 2	type: int
                    ReturnStmt
                        Id	name: a	scope: 2	type: int
        FunctionDefine Function name: main, Paramtype: int()
            No Params
            CompoundStmt
                Sequence
                    ExpStmt
                        FuncCallNode	funcName: putint	 funcType: void(int)	scope: 0
                            FuncCallParamsNode
                                FuncCallNode	funcName: ifElseIf	 funcType: int()	scope: 0
                                    No Params
                    ReturnStmt
                        IntegerLiteral	value: 0	type: const int
